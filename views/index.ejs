<!DOCTYPE html>
<html>
  <head>
    <title>Movie Night All-Platform Group Chat</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
	body {font: 13px Helvetica, Arial; }
	form { background: #fff; padding: 3px; position: static; bottom: 0; width: 100%; border-color: #000; border-top-style: solid; border-top-width: 1px;}
	form input { border-style: solid; border-width: 1px; padding: 10px; width: 85%; margin-right: .5%; }
	form button { width: 9%; background: #6495ED; border: none; padding: 10px; margin-left: 2%; }
	#messages { list-style-type: none; margin: 0; padding: 0; }
	#messages li { padding: 5px 10px; }
	#messages li:nth-child(odd) { background: #eee; }
    </style>
    <script src="../../socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
  </head>
  <body>
    <div class="message-container">
      <ul id="messages">
    <% for(let i=0; i<msgs.length; i++) { %>
        <!--article-->
	<li><strong><%= msgs[i].username %></strong>: <%=msgs[i].text %></li>
            <!--p><%= msgs[i].text %></p-->
        <!--/article-->
	<!--$('#messages').append($('<li>').html(msg));-->
    <% } %>

      </ul>
    </div>




    <div>

    </div>



    <div class="input-container">
    <form action="/" method="POST" id="chatForm">
      <input id="txt" autocomplete="off" autofocus="on" oninput="isTyping()" placeholder="type your message here..." /><button>Send</button>
    </form>
    </div>
    <script>

        // database connection
//	const mongoose = require("mongoose"); 
 //       const Chat = require("../models/ChatSchema");
//        const dbconnect = require("./../dbconnect");
////        const bodyParser = require("body-parser");
//        const chatRouter = require("./../route/chatroute");

        // routes
//        app.use("/chats", chatRouter);

        // connect using the passed-in port number
	var ip = location.hostname;
	var port = <%= port %>;
	var socket = io.connect('http://'+ip+':'+port);

//try{
////	prompt("a");
//	var ser = <%- JSON.stringify(msgs) %>;
////prompt("ser: " + ser);
////prompt("typeof ser: " + typeof ser );
//	var history = JSON.parse(ser);
////prompt("history: " + history);
//
//        const max_num_msgs = 1000;
//        var num_msgs = history.length;
//        var history_length = num_msgs > max_num_msgs ? max_num_msgs : num_msgs; 
////prompt("b");
////	var history = <%- JSON.stringify(msgs) %>; 
////        document.getElementById("demo").innerHTML = history[_count].name;
////prompt("c");
////        prompt("hist: " + history_length);
////        prompt("hist_decode: " + history[0].username ); 
//}
//catch (err) {
//	prompt("err: " + err);
//}

        // fetching initial chat messages from the database
//prompt("msgs length : " + msgs.length);
//try{
//	prompt("2");
//        var query = Chat.find({});
//}
//catch (err){
//	prompt("3:" + err);
//	console.error(err);
//}
//        query.exec(function(err, msgs) {
//            if (err) return console.error(err);
//             prompt("number of msgs: " + msgs.length);
//	    console.log(msgs);
//	});

//        (function() {
//            fetch("/chats")
//            .then(data => {
//                return data.json();
//            })
//        .then(json => {
//            json.map(data => {
// //               let li = document.createElement("li");
//                let messages = document.getElementById("messages");
////                let span = document.createElement("span");
//		$('#messages').append($('<li>').html(data.message));
//            });
//            window.scroll(0, document.documentElement.offsetHeight);
//        });

        // submit text message without reloading the page
	$('form').submit(function(e){
	    e.preventDefault(); // prevents page reloading
            socket.emit('chat_message', $('#txt').val());
	    $('#txt').val('');
	    return false;
	});

	// append the chat text message
	socket.on('chat_message', function(msg) {
	    $('#messages').append($('<li>').html(msg));
	    window.scroll(0, document.documentElement.offsetHeight);
	});

	// append text if someone is online
	socket.on('is_online', function(username) {
	    $('#messages').append($('<li>').html(username));
            window.scroll(0, document.documentElement.offsetHeight);
	});

        function value_is_set(value) {
	    return(value && value !== "" && !value.match(/^[ ]+$/i))
	}

	// ask username
	var username = null;
        while (!value_is_set(username)) {
	    username = prompt('Enter your username');
	}
	socket.emit('username', username);

    </script>
  </body>
</html>
